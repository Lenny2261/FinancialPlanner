@model FinancialPlanner.Models.TransactionViewModel

@{
    ViewBag.Title = "Index";
}
<div class="row">
    <div class="col-md-6">
        <h2>Transactions for @Model.account.Name</h2>
    </div>
    <div class="col-6-md">
        <a class="btn btn-info" href="@Url.Action("Create", "Transactions", new { id = Model.account.Id })">Add Transaction</a>
    </div>
</div>
<br />
<br />
<ul class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#all" class="tab-changed" id="tab1">All</a></li>
    <li><a data-toggle="tab" href="#debit" class="tab-changed" id="tab1">Debit</a></li>
    <li><a data-toggle="tab" href="#credit" class="tab-changed" id="tab2">Credit</a></li>
    <li><a data-toggle="tab" href="#void" class="tab-changed" id="tab3">Void</a></li>
</ul>

<div class="tab-content">

    <div id="all" class="tab-pane fade in active">
        <br />
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Category
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        Type
                    </th>
                    <th>
                        Description
                    </th>
                    <th>
                        From
                    </th>
                    <th>
                        Date
                    </th>
                    <th>
                        Amount
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.allTransactions)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.SubCategory.Category.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TransactionStatus.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TransactionType.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.From)
                        </td>
                        @{
                            var createdDate = item.Date.ToString().Split(' ');
                        }
                        <td>
                            @createdDate[0]
                        </td>
                        <td>
                            $@Html.DisplayFor(modelItem => item.Amount)
                        </td>
                        <td>
                            <a class="btn btn-info" href="@Url.Action("Edit", "Transactions", new { id = item.Id })">Edit</a>
                            @if (item.TransactionStatus.Name == "Void")
                            {
                                <a class="btn btn-info" href="@Url.Action("UnVoid", "Transactions", new { id = item.Id })">Reverse Void</a>
                            }
                            else
                            {
                                <a class="btn btn-info" href="@Url.Action("Void", "Transactions", new { id = item.Id })">Void</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div id="debit" class="tab-pane fade in">
        <br />
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Category
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        Type
                    </th>
                    <th>
                        Description
                    </th>
                    <th>
                        From
                    </th>
                    <th>
                        Date
                    </th>
                    <th>
                        Amount
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.debitTransactions)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.SubCategory.Category.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TransactionStatus.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TransactionType.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.From)
                        </td>
                        @{
                            var createdDate = item.Date.ToString().Split(' ');
                        }
                        <td>
                            @createdDate[0]
                        </td>
                        <td>
                            $@Html.DisplayFor(modelItem => item.Amount)
                        </td>
                        <td>
                            <a class="btn btn-info" href="@Url.Action("Edit", "Transactions", new { id = item.Id })">Edit</a>
                            <a class="btn btn-info" href="@Url.Action("Void", "Transactions", new { id = item.Id })">Void</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div id="credit" class="tab-pane fade in">
        <br />
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Category
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        Type
                    </th>
                    <th>
                        Description
                    </th>
                    <th>
                        From
                    </th>
                    <th>
                        Date
                    </th>
                    <th>
                        Amount
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.creditTransactions)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.SubCategory.Category.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TransactionStatus.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TransactionType.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.From)
                        </td>
                        @{
                            var createdDate = item.Date.ToString().Split(' ');
                        }
                        <td>
                            @createdDate[0]
                        </td>
                        <td>
                            $@Html.DisplayFor(modelItem => item.Amount)
                        </td>
                        <td>
                            <a class="btn btn-info" href="@Url.Action("Edit", "Transactions", new { id = item.Id })">Edit</a>
                            <a class="btn btn-info" href="@Url.Action("Void", "Transactions", new { id = item.Id })">Void</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div id="void" class="tab-pane fade in">
        <br />
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Category
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        Type
                    </th>
                    <th>
                        Description
                    </th>
                    <th>
                        From
                    </th>
                    <th>
                        Date
                    </th>
                    <th>
                        Amount
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.voidTransactions)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.SubCategory.Category.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TransactionStatus.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TransactionType.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.From)
                        </td>
                        @{
                            var createdDate = item.Date.ToString().Split(' ');
                        }
                        <td>
                            @createdDate[0]
                        </td>
                        <td>
                            $@Html.DisplayFor(modelItem => item.Amount)
                        </td>
                        <td>
                            <a class="btn btn-info" href="@Url.Action("Edit", "Transactions", new { id = item.Id })">Edit</a>
                            <a class="btn btn-info" href="@Url.Action("UnVoid", "Transactions", new { id = item.Id })">Reverse Void</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>



@section Scripts {
    <script type="text/javascript">

    var inClub = '@TempData["Overdraft"]';

    if (inClub == "Over") {
        swal({
            type: 'error',
            title: 'Oops...',
            text: 'Your account was overdrafted from this transaction make sure you are not forgeting a transaction!',
        })
    }
    </script>

}

