@model FinancialPlanner.Models.Household

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-12">
                <h4>Add Your Household</h4>
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Add" class="btn btn-default btn-info" />
            </div>
        </div>
    </div>
}
<br />
<br />
<br />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

    var inClub = '@TempData["InHouse"]';

    if (inClub == "Yes") {
        const swalWithBootstrapButtons = swal.mixin({
            confirmButtonClass: 'btn btn-success swal-club',
            cancelButtonClass: 'btn btn-danger',
            buttonsStyling: false,
        })

        swalWithBootstrapButtons({
            title: 'Leave current household?',
            text: "Do you want to leave your current household?",
            type: 'warning',
            showCancelButton: true,
            confirmButtonText: '<a href="@Url.Action("LeaveJoin", "Households")" class="swal-club">Yes, leave!</a>',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
        })
    }
    else {

    }
    </script>

}
